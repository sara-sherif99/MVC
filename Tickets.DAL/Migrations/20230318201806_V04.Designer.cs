// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tickets.DAL.Context;

#nullable disable

namespace Tickets.DAL.Migrations
{
    [DbContext(typeof(TicketsContext))]
    [Migration("20230318201806_V04")]
    partial class V04
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.Property<Guid>("DevelopersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TicketsId")
                        .HasColumnType("int");

                    b.HasKey("DevelopersId", "TicketsId");

                    b.HasIndex("TicketsId");

                    b.ToTable("DeveloperTicket");
                });

            modelBuilder.Entity("Tickets.DAL.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3617127-2b58-438b-b5cc-ac3c3d9e5a21"),
                            Name = "Automotive & Baby"
                        },
                        new
                        {
                            Id = new Guid("5346da07-28c3-452a-815b-7b2731ff6146"),
                            Name = "Beauty & Health"
                        },
                        new
                        {
                            Id = new Guid("8c975e5d-6ec1-4930-8d46-f3ddd2ee076b"),
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("Tickets.DAL.Models.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b731ee0-a2a0-4120-8211-76b161f64535"),
                            FirstName = "Freddie",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = new Guid("6001109e-314f-46dd-be5c-9703a1a4fb51"),
                            FirstName = "Sophia",
                            LastName = "O'Keefe"
                        },
                        new
                        {
                            Id = new Guid("dd56d068-ef7b-4226-91eb-35fb10aa2d6d"),
                            FirstName = "Angela",
                            LastName = "McClure"
                        },
                        new
                        {
                            Id = new Guid("1c1bf402-5fe3-497a-9c57-475ff7ce1487"),
                            FirstName = "Jamie",
                            LastName = "Berge"
                        },
                        new
                        {
                            Id = new Guid("d9d44861-081b-4c33-a415-c3146b38aa5d"),
                            FirstName = "Geoffrey",
                            LastName = "Abbott"
                        });
                });

            modelBuilder.Entity("Tickets.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("DeptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeptId = new Guid("8c975e5d-6ec1-4930-8d46-f3ddd2ee076b"),
                            Description = "Harum hic impedit dolore voluptate placeat.",
                            Severity = 1,
                            Title = "in"
                        },
                        new
                        {
                            Id = 2,
                            DeptId = new Guid("8c975e5d-6ec1-4930-8d46-f3ddd2ee076b"),
                            Description = "Rerum totam est quo possimus sunt sunt ad.",
                            Severity = 0,
                            Title = "id"
                        },
                        new
                        {
                            Id = 3,
                            DeptId = new Guid("b3617127-2b58-438b-b5cc-ac3c3d9e5a21"),
                            Description = "Id cumque explicabo beatae.",
                            Severity = 1,
                            Title = "dicta"
                        },
                        new
                        {
                            Id = 4,
                            DeptId = new Guid("8c975e5d-6ec1-4930-8d46-f3ddd2ee076b"),
                            Description = "Consectetur beatae dolorem voluptates occaecati.",
                            Severity = 0,
                            Title = "eius"
                        },
                        new
                        {
                            Id = 5,
                            DeptId = new Guid("8c975e5d-6ec1-4930-8d46-f3ddd2ee076b"),
                            Description = "Nulla est doloribus ut non aspernatur vero dolores.",
                            Severity = 2,
                            Title = "assumenda"
                        });
                });

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.HasOne("Tickets.DAL.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tickets.DAL.Models.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tickets.DAL.Models.Ticket", b =>
                {
                    b.HasOne("Tickets.DAL.Models.Department", "Department")
                        .WithMany("Tickets")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Tickets.DAL.Models.Department", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
